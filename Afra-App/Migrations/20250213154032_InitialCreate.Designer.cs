// <auto-generated />
using System;
using Afra_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Afra_App.Migrations
{
    [DbContext(typeof(AfraAppContext))]
    [Migration("20250213154032_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Afra_App.Data.Otium.Einschreibung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BetroffenePersonId")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Ende")
                        .HasColumnType("TEXT");

                    b.Property<TimeOnly>("Start")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TerminId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BetroffenePersonId");

                    b.HasIndex("TerminId");

                    b.ToTable("OtiaEinschreibungen");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Kategorie", b =>
                {
                    b.Property<string>("Bezeichnung")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Bezeichnung");

                    b.ToTable("OtiaKategorien");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Otium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Beschreibung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("KategorieBezeichnung")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KategorieBezeichnung");

                    b.ToTable("Otia");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Termin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Block")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IstAbgesagt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OtiumId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WiederholungId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OtiumId");

                    b.HasIndex("TutorId");

                    b.HasIndex("WiederholungId");

                    b.ToTable("OtiaTermine");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Wiederholung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte>("Block")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OtiumId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Wochentag")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OtiumId");

                    b.HasIndex("TutorId");

                    b.ToTable("OtiaWiederholungen");
                });

            modelBuilder.Entity("Afra_App.Data.People.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MentorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.ToTable("Personen");
                });

            modelBuilder.Entity("Afra_App.Data.People.Rolle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rollen");
                });

            modelBuilder.Entity("OtiumPerson", b =>
                {
                    b.Property<Guid>("VerantwortlicheId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("VerwalteteOtiaId")
                        .HasColumnType("TEXT");

                    b.HasKey("VerantwortlicheId", "VerwalteteOtiaId");

                    b.HasIndex("VerwalteteOtiaId");

                    b.ToTable("OtiumPerson");
                });

            modelBuilder.Entity("PersonRolle", b =>
                {
                    b.Property<Guid>("PersonId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RollenId")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId", "RollenId");

                    b.HasIndex("RollenId");

                    b.ToTable("PersonRolle");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Einschreibung", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", "BetroffenePerson")
                        .WithMany("OtiaEinschreibungen")
                        .HasForeignKey("BetroffenePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.Otium.Termin", "Termin")
                        .WithMany("Enrollments")
                        .HasForeignKey("TerminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BetroffenePerson");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Otium", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Kategorie", "Kategorie")
                        .WithMany("Otia")
                        .HasForeignKey("KategorieBezeichnung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorie");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Termin", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Otium", "Otium")
                        .WithMany("Termine")
                        .HasForeignKey("OtiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.People.Person", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.Otium.Wiederholung", "Wiederholung")
                        .WithMany("Termine")
                        .HasForeignKey("WiederholungId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Otium");

                    b.Navigation("Tutor");

                    b.Navigation("Wiederholung");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Wiederholung", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Otium", "Otium")
                        .WithMany("Wiederholungen")
                        .HasForeignKey("OtiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.People.Person", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Otium");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Afra_App.Data.People.Person", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", "Mentor")
                        .WithMany("Mentees")
                        .HasForeignKey("MentorId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("OtiumPerson", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", null)
                        .WithMany()
                        .HasForeignKey("VerantwortlicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.Otium.Otium", null)
                        .WithMany()
                        .HasForeignKey("VerwalteteOtiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonRolle", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.People.Rolle", null)
                        .WithMany()
                        .HasForeignKey("RollenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Kategorie", b =>
                {
                    b.Navigation("Otia");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Otium", b =>
                {
                    b.Navigation("Termine");

                    b.Navigation("Wiederholungen");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Termin", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Wiederholung", b =>
                {
                    b.Navigation("Termine");
                });

            modelBuilder.Entity("Afra_App.Data.People.Person", b =>
                {
                    b.Navigation("Mentees");

                    b.Navigation("OtiaEinschreibungen");
                });
#pragma warning restore 612, 618
        }
    }
}
