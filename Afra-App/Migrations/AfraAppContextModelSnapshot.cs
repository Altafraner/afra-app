// <auto-generated />
using System;
using System.Collections.Generic;
using Afra_App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Afra_App.Migrations
{
    [DbContext(typeof(AfraAppContext))]
    partial class AfraAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Afra_App.Data.Otium.Einschreibung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BetroffenePersonId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TerminId")
                        .HasColumnType("uuid");

                    b.ComplexProperty<Dictionary<string, object>>("Interval", "Afra_App.Data.Otium.Einschreibung.Interval#TimeOnlyInterval", b1 =>
                        {
                            b1.Property<TimeSpan>("Duration")
                                .HasColumnType("interval");

                            b1.Property<TimeOnly>("Start")
                                .HasColumnType("time without time zone");
                        });

                    b.HasKey("Id");

                    b.HasIndex("BetroffenePersonId");

                    b.HasIndex("TerminId");

                    b.ToTable("OtiaEinschreibungen");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Kategorie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CssColor")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Icon")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Required")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("OtiaKategorien");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Otium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Beschreibung")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Bezeichnung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("KategorieId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("KategorieId");

                    b.ToTable("Otia");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Termin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Block")
                        .HasColumnType("smallint");

                    b.Property<bool>("IstAbgesagt")
                        .HasColumnType("boolean");

                    b.Property<int?>("MaxEinschreibungen")
                        .HasColumnType("integer");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("OtiumId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("SchultagDatum")
                        .HasColumnType("date");

                    b.Property<Guid?>("TutorId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WiederholungId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OtiumId");

                    b.HasIndex("SchultagDatum");

                    b.HasIndex("TutorId");

                    b.HasIndex("WiederholungId");

                    b.ToTable("OtiaTermine");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Wiederholung", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte>("Block")
                        .HasColumnType("smallint");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("OtiumId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TutorId")
                        .HasColumnType("uuid");

                    b.Property<int>("Wochentag")
                        .HasColumnType("integer");

                    b.Property<int>("Wochentyp")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OtiumId");

                    b.HasIndex("TutorId");

                    b.ToTable("OtiaWiederholungen");
                });

            modelBuilder.Entity("Afra_App.Data.People.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid?>("MentorId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Rolle")
                        .HasColumnType("integer");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.ToTable("Personen");
                });

            modelBuilder.Entity("Afra_App.Data.Schuljahr.Schultag", b =>
                {
                    b.Property<DateOnly>("Datum")
                        .HasColumnType("date");

                    b.PrimitiveCollection<bool[]>("OtiumsBlock")
                        .IsRequired()
                        .HasColumnType("boolean[]");

                    b.Property<int>("Wochentyp")
                        .HasColumnType("integer");

                    b.HasKey("Datum");

                    b.ToTable("Schultage");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("OtiumPerson", b =>
                {
                    b.Property<Guid>("VerantwortlicheId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VerwalteteOtiaId")
                        .HasColumnType("uuid");

                    b.HasKey("VerantwortlicheId", "VerwalteteOtiaId");

                    b.HasIndex("VerwalteteOtiaId");

                    b.ToTable("OtiumPerson");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Einschreibung", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", "BetroffenePerson")
                        .WithMany("OtiaEinschreibungen")
                        .HasForeignKey("BetroffenePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.Otium.Termin", "Termin")
                        .WithMany("Enrollments")
                        .HasForeignKey("TerminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BetroffenePerson");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Kategorie", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Kategorie", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Otium", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Kategorie", "Kategorie")
                        .WithMany("Otia")
                        .HasForeignKey("KategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategorie");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Termin", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Otium", "Otium")
                        .WithMany("Termine")
                        .HasForeignKey("OtiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.Schuljahr.Schultag", "Schultag")
                        .WithMany()
                        .HasForeignKey("SchultagDatum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.People.Person", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId");

                    b.HasOne("Afra_App.Data.Otium.Wiederholung", "Wiederholung")
                        .WithMany("Termine")
                        .HasForeignKey("WiederholungId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Otium");

                    b.Navigation("Schultag");

                    b.Navigation("Tutor");

                    b.Navigation("Wiederholung");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Wiederholung", b =>
                {
                    b.HasOne("Afra_App.Data.Otium.Otium", "Otium")
                        .WithMany("Wiederholungen")
                        .HasForeignKey("OtiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.People.Person", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorId");

                    b.Navigation("Otium");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Afra_App.Data.People.Person", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", "Mentor")
                        .WithMany("Mentees")
                        .HasForeignKey("MentorId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("OtiumPerson", b =>
                {
                    b.HasOne("Afra_App.Data.People.Person", null)
                        .WithMany()
                        .HasForeignKey("VerantwortlicheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Afra_App.Data.Otium.Otium", null)
                        .WithMany()
                        .HasForeignKey("VerwalteteOtiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Kategorie", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Otia");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Otium", b =>
                {
                    b.Navigation("Termine");

                    b.Navigation("Wiederholungen");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Termin", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Afra_App.Data.Otium.Wiederholung", b =>
                {
                    b.Navigation("Termine");
                });

            modelBuilder.Entity("Afra_App.Data.People.Person", b =>
                {
                    b.Navigation("Mentees");

                    b.Navigation("OtiaEinschreibungen");
                });
#pragma warning restore 612, 618
        }
    }
}
